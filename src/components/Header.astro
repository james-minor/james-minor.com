---

interface Props
{
	title: string,
	subtitle: string,
	backgroundColor: string
}

const {title, subtitle = '', backgroundColor} = Astro.props;

---

<header class="header" id="js-header">
	<div class="header__grid"/>
	<div class="header__mask"/>
	
	<h1 class="header__title">{title}</h1>
	<span class="header__subtitle">{subtitle}</span>
</header>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 230">
	<path
			fill={backgroundColor}
			fill-opacity="1"
			d="M0,128L48,149.3C96,171,192,213,288,208C384,203,480,149,576,112C672,75,768,53,864,85.3C960,117,1056,203,
				1152,213.3C1248,224,1344,160,1392,128L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,
				672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path>
</svg>

<style define:vars={{backgroundColor}}>
	.header {
		--header-color: var(--backgroundColor);
		
		position: relative;
		
		width: 100%;
		min-height: 40svh;
		
		background-color: var(--header-color);
		
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.header__grid,
	.header__mask {
		width: 100%;
		height: 100%;

		position: absolute;
		top: 0;
		left: 0;
	}

	.header__grid {
		background-position: 0 0;
		background-size: 65px 65px;
		background-image: radial-gradient(circle, rgba(0, 0, 0, 0.15) 4px, rgba(0, 0, 0, 0) 4px);

		animation-name: anim-hero-grid;
		animation-iteration-count: infinite;
		animation-duration: 12s;
		animation-timing-function: linear;
	}

	@keyframes anim-hero-grid {
		from {
			background-position: 0 0;
		}
		to {
			background-position: 65px 65px;
		}
	}

	.header__mask {
		background-image: linear-gradient(180deg, transparent 0%, var(--header-color) 100%);
	}
	
	.header__title {
		font-size: 7rem;
		font-weight: bold;
		
		z-index: 100;
	}
	
	.header__subtitle {
		font-size: 2rem;
		z-index: 100;
	}
</style>
