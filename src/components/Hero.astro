---
let heroText: string = 'James Minor';


const buttons = [
	['About', '#435CD8', '#'],
	['Career', '#4BCC6D', '#'],
	['Projects', '#DD902C', '#'],
	['Blog', '#DD492C', '#'],
	['Contact', '#2CC9DD', '#']
];
---

<div class="hero" id="js-hero">
	<div class="hero__grid"/>
	<div class="hero__mask"/>

	<h1 class="hero__text" id="js-hero__text">{heroText.toUpperCase()}</h1>

	<div class="hero__button-container">
		{
			buttons.map((button) =>
				(
					<a class="hero__button" href={button[2]} data-color={button[1]}>{button[0]}</a>
				))
		}
	</div>

	<script>
		const root = document.querySelector(':root');
		const buttons = document.getElementsByClassName('hero__button');
		const heroText = document.getElementById('js-hero__text');
		
		// Adding event listeners for the nav buttons.
		for(let i = 0; i < buttons.length; i++)
		{
			let button = buttons[i];
			
			button.addEventListener('focus', () =>
			{
				heroText.innerText = button.innerHTML;
				root.style.setProperty('--hero-background-color', button.dataset.color);
				
				restartTextAnimation();
			});
			
			button.addEventListener('mouseover', () =>
			{
				heroText.innerText = button.innerHTML;
				root.style.setProperty('--hero-background-color', button.dataset.color);
				
				restartTextAnimation();
			});
			
			button.addEventListener('mouseleave', () =>
			{
				heroText.innerText = 'James Minor';
				root.style.setProperty('--hero-background-color', '#bc3cff');
				
				restartTextAnimation();
			});
			
			function restartTextAnimation() {
				heroText.classList.remove('hero__text');
				void heroText.offsetWidth;
				heroText.classList.add('hero__text');
			}
		}
	</script>
</div>

<div class="wave__container">
	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 230">
		<path
				fill="#0099ff"
				fill-opacity="1"
				d="M0,128L48,149.3C96,171,192,213,288,208C384,203,480,149,576,112C672,75,768,53,864,85.3C960,117,1056,203,1152,213.3C1248,224,1344,160,1392,128L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path>
	</svg>
</div>


<style>
	:root {
		--hero-background-color: #bc3cff;
	}
	
	.hero {
		width: 100%;
		
		height: 100svh;

		background-color: var(--hero-background-color);
		transition: background-color 1.5s;
	}

	.hero__grid,
	.hero__mask {
		width: 100%;
		height: 100%;

		position: absolute;
		top: 0;
		left: 0;
	}

	.hero__grid {
		background-position: 0 0;
		background-size: 65px 65px;
		background-image: radial-gradient(circle, rgba(0, 0, 0, 0.15) 4px, rgba(0, 0, 0, 0) 4px);

		animation-name: anim-hero-grid;
		animation-iteration-count: infinite;
		animation-duration: 8s;
		animation-timing-function: linear;
	}

	@keyframes anim-hero-grid {
		from {
			background-position: 0 0;
		}
		to {
			background-position: 65px 65px;
		}
	}

	.hero__mask {
		background-image: linear-gradient(180deg, transparent 0%, var(--hero-background-color) 100%);
	}

	.hero__text {
		font-family: sans-serif;
		font-size: clamp(3.5rem, 15vw + 1rem, 17vw);
		font-weight: bold;

		line-height: 0.8;

		text-transform: uppercase;
		text-align: center;

		width: 100%;
		max-width: 100vw;
		height: 100vh;

		overflow-x: hidden;

		display: flex;
		align-items: center;
		justify-content: center;

		user-select: none;
		
		-webkit-text-stroke: 0.01em rgba(255, 255, 255, 0.85);
		color: transparent;

		z-index: 90;

		opacity: 0;
		
		animation-name: anim-hero-text;
		animation-duration: 0.4s;
		animation-timing-function: ease-in-out;
		animation-fill-mode: forwards;
		animation-delay: 0.2s;
	}

	@keyframes anim-hero-text {
		from {
			opacity: 0;
			transform: scale(80%) translateY(-20%);
		}
		to {
			opacity: 1;
			transform: none;
		}
	}
	
	.hero__button-container {
		position: absolute;

		bottom: 10%;

		display: flex;
		width: 100%;

		column-gap: 2%;
		padding-left: 8%;
		padding-right: 8%;

		z-index: 100;
	}

	.hero__button {
		background: linear-gradient(
				90deg,
				transparent 50%,
				white 50%,
				white 100%
		), 0 0;
		background-size: 210% 100%;

		outline: none;

		color: white;

		border-style: solid;
		border-width: thin;
		border-color: white;

		text-decoration: none;
		text-transform: uppercase;
		text-align: center;

		padding: 0.5rem 1.75rem;

		cursor: pointer;
		
		flex: 1;
		transition: 0.3s padding-left, 0.3s padding-right, background-position 0.3s;
	}

	.hero__button:focus-visible,
	.hero__button:hover {
		background-position: 100% 0;
		color: var(--hero-background-color);
		font-weight: bold;
		padding-left: 3rem;
		padding-right: 3rem;
	}
	
	@media (prefers-reduced-motion) {
		.hero {
			transition-duration: 0s;
		}
		
		.hero__text {
			opacity: 1;
			animation: none;
		}
		
		.hero__grid {
			animation: none;
		}
		
		.hero__button {
			transition-duration: 0s;
		}
	}
	
	@media only screen and (max-width: 1300px) {
		.hero__button:focus-visible,
		.hero__button:hover {
			padding: 0.5rem 1.75rem;
		}
		
		.hero__button-container {
			bottom: 0;
			column-gap: 0;
			padding-left: 0;
			padding-right: 0;
			
			flex-direction: column;
		}
	}
	
	.wave__container {
		background-color: var(--col-body-background);
	}
	
	path {
		fill: var(--hero-background-color);
	}
</style>
